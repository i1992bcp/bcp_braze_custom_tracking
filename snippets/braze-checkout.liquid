$(document).ready(function() {

    
        fetch('/cart.js/').then(async res => {
            let cartJSON = await res.json();
            let products = cartJSON.items;
            let orderID = cartJSON.token;
            let total = cartJSON.total_price;
            var a = total.toString().split('');
            var b = a.pop();
            var c = a.pop();
            a.unshift('$')
            a.push('.');
            a.push(b);
            a.push(c);
            var d = a.join('');

            console.log('cart');
            console.log(cartJSON);

            localStorage.setItem("cart_id", orderID);

            var productJSON = products.map(({id, product_title, sku, product_type, vendor, variant_title, price, quantity, url, image}) => {
                return {
                    product_id: id,
                    sku: sku,
                    category: product_type,
                    name: product_title,
                    brand: vendor,
                    variant: variant_title,
                    price: ('$' + price.toString().slice(0, -2) + '.' + price.toString().slice(-2)),
                    quantity: quantity,
                    // coupon: none are per item to my knowledge so far
                    // position: only one layout since checkout page
                    url: window.location.href + url,
                    image: image
                }
            })

            if (window.location.href.indexOf("checkouts") > -1) {

                // var discount = $('.form.edit_checkout[data-reduction-form="true"]')

                // if (discount === undefined ) {
                //     // Checkout Started
                //     console.log('No Discount Applied');
                //     appboy.logCustomEvent("Checkout Started", {
                //         order_id: orderID,
                //         affiliation: window.location.href.split('com')[0] + 'com',
                //         total: $('.payment-due__price')[0].innerText,
                //         revenue: d,
                //         // shipping: provided on the next step
                //         tax: $('.total-line--taxes span')[0].innerText,
                //         discount: "None Applied",
                //         coupon: $('.reduction-code__text')[0].innerText,
                //         currency: Shopify.Checkout.currency,
                //         products: productJSON
                //     });
                // } else {

                //     // Checkout Started
                //     console.log('Discount Applied');
                //     appboy.logCustomEvent("Checkout Started", {
                //         order_id: orderID,
                //         affiliation: window.location.href.split('com')[0] + 'com',
                //         total: $('.payment-due__price')[0].innerText,
                //         revenue: d,
                //         // shipping: provided on the next step
                //         tax: $('.total-line--taxes span')[0].innerText,
                //         discount: discount,
                //         price: $('span.payment-due__price[data-checkout-payment-due-target]')[0].outerText,
                //         coupon: $('.reduction-code__text')[0].innerText,
                //         currency: Shopify.Checkout.currency,
                //         products: productJSON
                //     });
                // }

                appboy.logCustomEvent("Checkout Started", {
                    order_id: orderID,
                    affiliation: window.location.href.split('com')[0] + 'com',
                    total: $('.payment-due__price')[0].innerText,
                    revenue: d,
                    // shipping: provided on the next step
                    tax: $('.total-line--taxes span')[0].innerText,
                    price: $('span.payment-due__price[data-checkout-payment-due-target]')[0].outerText,
                    currency: Shopify.Checkout.currency,
                    products: productJSON
                });

            }

            // Validate Payment Info Entered
            $('.edit_checkout .step__footer #continue_button')
            .click(() => {
                if (
                    $('#checkout_email').val().length > 0 &&
                    $('#checkout_shipping_address_first_name').val().length > 0 &&
                    $('#checkout_shipping_address_last_name').val().length > 0 &&
                    $('#checkout_shipping_address_address1').val().length > 0 &&
                    $('#checkout_shipping_address_city').val().length > 0 &&
                    $('#checkout_shipping_address_zip').val().length > 0 &&
                    $('#checkout_shipping_address_phone').val().length > 0
                ) {
                    
                    // Payment Info Entered Correctly
                    console.log('Payment Info Entered');
                    appboy.logCustomEvent("Payment Info Entered", {
                        // checkout_id: doesn't exist until order is created or if we use server graphql
                        order_id: BrazeDataLayer.ecommerce.order[0].o_id,
                        step: "Contact Information",
                        // shipping_method: provided on second,
                        // payment_method: provided on third step,
                    })
                } else {

                    // Payment Info Entered Incorrectly
                    console.log('Payment Info Entered Incorrect');
                }
            })

            $('.order-summary__section.order-summary__section--discount form.edit_checkout:nth-child(3) div.fieldset button.field__input-btn.btn')
            .click(() => {
                // After firing
                setTimeout(function(){ 
                    if ( $('#error-for-reduction_code').text().length > 0 ) {
                        // Coupon Denied
                        var coupon_id = $('#checkout_reduction_code').val();
                        appboy.logCustomEvent("Coupon Denied", {
                            order_id: BrazeDataLayer.ecommerce.order[0].o_id,
                            cart_id: orderID,
                            coupon_id: coupon_id,
                            // coupon_name: not used since coupon_id is used
                            reason: "Enter a valid discount code or gift card"
                        })
                    }
                }, 3000);
            });
        })

});

$(document)
.submit(function(event) {
    // cookie to prevent multiple calls on the "Coupon Applied" event
    const cookieName = localStorage.getItem("cookieName", 0);

    const cookieAttributes = {
      path: '/',
      domain: 'bestchoiceproducts.com'
    }

    // remove cookie if coupon is removed
    if (event.target.closest('form.edit_checkout[data-reduction-form="true"]')) {
        localStorage.removeItem("cookieName");
        var coupon_id = $('.total-line.total-line--reduction .reduction-code__text').text();
        appboy.logCustomEvent("Coupon Removed", {
            order_id: BrazeDataLayer.ecommerce.order[0].o_id,
            cart_id: localStorage.getItem('cart_id'),
            coupon_id: coupon_id,
            discount: $('.visually-hidden.skeleton-while-loading-sr').text().split(' off ')[0].trim()

        });

    }


    // targeting just one of the 2-3 forms with .edit_checkout 
    if (event.target.closest('form.edit_checkout:not([data-reduction-form="true"])')) {

      // to retry at most 10 times
      let iterations = 0;
      const interval = setInterval(async function () {
        try {
          const reductionForm = document.querySelector('#order-summary [data-reduction-form="true"]');
          const errorForReduction = document.querySelector('.field--error #error-for-reduction_code');
          iterations++;

          if (reductionForm) {

            // if coupon is applied already, do not send event
            if (cookieName) {
              return;
            }

            // check if cookie is there, if not add it, if it is, do not fire
            // Cookies.set(cookieName, 1, cookieAttributes);
            localStorage.setItem("cookieName", 1);

            clearInterval(interval);
            iterations = 0;

            const response = await fetch("/cart.js");
            const body = await response.json();
            const cart_id = body.token;
            const coupon = document.querySelector('.tag__wrapper .reduction-code__text').innerText;

            let total = 0;
            let discount = 0

            const originalTotalPrice = document.querySelectorAll('.js-line-item-price .order-summary__small-text');
            const totalAfterDiscount = document.querySelectorAll('.js-line-item-price .order-summary__emphasis');


            originalTotalPrice.forEach((elm) => {
              total += parseFloat(elm.innerText.replace(/\$/g, ''));
            })

            totalAfterDiscount.forEach((elm) => {
              discount += parseFloat(elm.innerText.replace(/\$/g, ''));
            })

            let totalDiscount = total - discount;
            // round to correct precision error
            totalDiscount = Math.round(totalDiscount * 100) / 100;

            appboy.logCustomEvent("Coupon Entered", {
                order_id: BrazeDataLayer.ecommerce.order[0].o_id,
                cart_id: localStorage.getItem('cart_id'),
                coupon_id:  $('.total-line.total-line--reduction .reduction-code__text').text(),
            })

          } else if (iterations >= 10 || errorForReduction) {
            iterations = 0;
            clearInterval(interval);
          }

        } catch (error) {
          clearInterval(interval);
          throw error;
        }
      }, 750);

    }
})

